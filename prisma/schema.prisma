// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique @db.VarChar(255)
  password    String        @db.VarChar(255)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Credentials Credential[]
  Notes       Note[]
  Cards       Card[]

  @@map("users")
}

model Credential {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  url       String   @db.VarChar(255)
  username  String   @db.VarChar(255)
  password  String   @db.VarChar(255)
  User      User    @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, title])
  @@map("credentials")
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  anotation String
  Users     User    @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, title])
  @@map("notes")
}

model Card {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  number    String   @unique
  name      String   @db.VarChar(255)
  cvv       String   @db.VarChar(255)
  exp       String   @db.VarChar(255)
  password  String   @db.VarChar(255)
  isVirtual Boolean
  isCredit  Boolean
  isDebit   Boolean
  Users     User    @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, title])
  @@map("cards")
}
